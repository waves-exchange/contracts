{
  "type": 13,
  "version": 2,
  "senderPublicKey": "6PdA345SW1zresPEKuWiLPsh9Ku14mFDW6cZtpCQrp3E",
  "chainId": 87,
  "fee": 1400000,
  "feeAssetId": null,
  "timestamp": 1659088314089,
  "proofs": [],
  "id": "HHp727ZvJWzMKS7ptUkQiXYPJpyXpuMJ8NkUHo5Ab6bm",
  "script": "base64:"
}