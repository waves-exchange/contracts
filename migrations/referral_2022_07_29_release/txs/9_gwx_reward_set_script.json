{
  "type": 13,
  "version": 2,
  "senderPublicKey": "G349Uq3FTox7dRNLeAfAQeoACvwZ9iEnVSaHcEYn6j8J",
  "chainId": 87,
  "fee": 1400000,
  "feeAssetId": null,
  "timestamp": 1659087644720,
  "proofs": [],
  "id": "BXRgrCJHJdnNTkUJjfEjEWpPLadaNEQER3cXxv4sNXvH",
  "script": "base64:"
}