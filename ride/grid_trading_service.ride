{-# STDLIB_VERSION 7 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

let separator = "__"
let chainId = this.bytes.drop(1).take(1)
let chainIdT = base16'54'
let chainIdW = base16'57'

func mustAddress(i: Invocation, address: Address) = {
  i.caller == address || throw("permission denied")
}

func mustThis(i: Invocation) = {
  mustAddress(i, this)
}

# withdraw from investment account to specified address
@Callable(i)
func withdraw(args: List[String]) = {
  let recipient = addressFromStringValue(args[0])
  let amount = parseIntValue(args[1])
  let result = i.caller.invoke("transferWaves", [recipient.bytes, amount], [])

  (nil, result)
}

# set param example
@Callable(i)
func setIntParam(args: List[String]) = {
  let key = args[0]
  let val = parseIntValue(args[1])
  let result = i.caller.invoke("integerEntry", [key, val], [])

  (nil, result)
}

@Callable(i)
func setStrParam(args: List[String]) = {
  let key = args[0]
  let val = args[1]
  let result = i.caller.invoke("stringEntry", [key, val], [])

  (nil, result)
}

@Verifier(tx)
func verify() = {
  chainId == chainIdT
}