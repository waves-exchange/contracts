{-# STDLIB_VERSION 5 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

let SEP = "__"

let statusVerified = 2
let statusUnverified = 0

func keyStatus(assetId: String) = "status_<"+assetId+">"

func isVerified(assetId: String) = {
  assetId.keyStatus().getInteger().valueOrElse(statusUnverified) == statusVerified
}

@Callable(i)
func createOrUpdate(assetId: String, logo: String, verified: Boolean) = {
  (nil, unit)
}

@Callable(i)
func addLabel(assetId: String, label: String) = {
  (nil, unit)
}

@Callable(i)
func addAssetsLink(amountAsset: String, priceAsset: String, lpAsset: String) = {
  (nil, unit)
}

@Callable(i)
func increaseAssetPoolsNumber(assetId: String) = {
  (nil, unit)
}

@Callable(i)
func setVerified(assetId: String, verified: Boolean) = {
  ([
    IntegerEntry(assetId.keyStatus(), if (verified) then statusVerified else statusUnverified)
  ], unit)
}

@Callable(i)
func setLogo(assetId: String, logo: String) = {
  (nil, unit)
}

@Callable(i)
func isVerifiedREADONLY(assetId: String) = {
  # (nil, assetId.getBoolean().valueOrElse(false))
  (nil, assetId.isVerified())
}

@Callable(i)
func deletePool(amountId: String, priceId: String) = {
    let keyPoolPair = makeString([amountId, priceId], SEP)

    [
        DeleteEntry(keyPoolPair)
    ]
}
